class Solution:
    def maxEqualRowsAfterFlips(self, matrix: List[List[int]]) -> int:
        # Intuition is to store the values in a hashmap and then return the max of their vales.
        # We will also be only focusing on 0 values i.e whenever we get value starting with 1 we are gonna flip it and thena add it to map.

        # We use defaultdict to intitalize a hashmap becoz it can handle no key error when we are trying to incriment a value whcih is not yest present in the map. 
        res = defaultdict(int)

        for v in matrix:
            # Typecasting to tuple coz keys in map should be immutable
            v_tup = tuple(v)

            # If starting val is 1 means its needed to be flipped
            if v_tup[0] == 1:
                v_tup = tuple(0 if n == 1 else 1 for n in v)

            res[v_tup] += 1
        
        return max(res.values())
