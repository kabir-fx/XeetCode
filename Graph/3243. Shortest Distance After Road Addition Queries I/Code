class Solution:
    def shortestDistanceAfterQueries(self, n: int, queries: List[List[int]]) -> List[int]:
        adj = [[i+1] for i in range(n)]

        def shortest_path():
            q = deque()
            q.append((0, 0))   #Node, length

            visited = set()
            visited.add((0,0))

            while q:
                cur, l = q.popleft()

                if cur == n-1:
                    return l

                for nei in adj[cur]:
                    if nei not in visited:
                        q.append((nei, l +1))
                        visited.add(nei)

        res = []

        for src, dest in queries:
            adj[src].append(dest)
            res.append(shortest_path())
        
        return res
