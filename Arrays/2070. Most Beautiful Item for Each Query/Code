class Solution:
    def maximumBeauty(self, items: List[List[int]], queries: List[int]) -> List[int]:
        # The intuition is to first sort the 2 lists, then use 2 pointer approach

        items.sort()
        queries = sorted((value, index) for index, value in enumerate(queries))
        
        res = [0] * len(queries)

        mx = 0 
        item_index = 0
        
        # Process each query keeping track of the original indices
        for query_value, original_index in queries:
            # Update mx while item sizes are less than or equal to the current query size
            while item_index < len(items) and items[item_index][0] <= query_value:
                mx = max(mx, items[item_index][1])
                item_index += 1
            # Assign the found maximum beauty to the corresponding position in the result list
            res[original_index] = mx
        
        return res
            
