class Solution:
    def threeSum(self, nums: List[int]) -> List[List[int]]:
        # Intuition is to use a 2 pointer aaprroach on top of the outer loop which only evaluates distinct values 
        res = []
        nums.sort()

        for i, n in enumerate(nums):
            # Check if duplicate
            if i > 0 and n == nums[i-1]:
                continue
            
            l,r = i+1, len(nums) -1

            while l < r:
                s = nums[l] + nums[r] + n

                if s == 0:
                    # Appeend the values, not indexes
                    res.append([n, nums[l], nums[r]])

                    # We need to only update one pointer as the other pointer will automtically be handled by the code
                    l += 1
                    # Check whether we are adding duplicates
                    while nums[l] == nums[l-1] and l < r:
                        l += 1
                
                elif s > 0:
                    r -= 1
                
                else:
                    l += 1
        
        return res


        # O(n.logn) + O(n^2) ----> O(n^2)
        # O(1)
